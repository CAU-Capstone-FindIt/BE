plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.mysql:mysql-connector-j' //mysql 추가
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// H2 Database 추가
	implementation 'com.h2database:h2'

	//Webflux
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	//FCM 추가
	implementation 'com.google.firebase:firebase-admin:9.1.1'

	// JSON 파싱을 위한 Jackson (이미 spring-boot-starter-web에 포함되어 있지만, 명시적으로 추가 가능)
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	//스프링 시큐리티
//	implementation 'org.springframework.boot:spring-boot-starter-security'

	//JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

}

tasks.named('test') {
	useJUnitPlatform()
}
